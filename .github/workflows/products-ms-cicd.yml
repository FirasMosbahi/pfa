name: product-ms-pipeline

on:
  push:
    paths:
      - 'products-ms/**'
      - '.github/workflows/products-ms-cicd.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          cd products-ms
          npm install

      - name: Dependency Vulnerability Scanning
        run: |
          cd products-ms
          npm audit --json > npm-audit.json

      - name: Run tests
        env:
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          DB_HOST: ${{secrets.DB_HOST}}/${{secrets.DB_NAME}}
          PORT: ${{secrets.PRODUCT_MS_PORT}}
        run: |
          cd products-ms
          npm test

      - name: Build NestJS app
        run: |
          cd products-ms
          npm run build

      - name: Create build directory
        run: |
          mkdir build
          cp -r products-ms/dist build
          cp products-ms/nest-cli.json products-ms/package.json products-ms/Dockerfile products-ms/.dockerignore build

      - name: Create build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build

  build-docker-image:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact

      - name: Build Docker image
        run: |
          docker build -t products-ms:latest .

      - name: Container Security Scanning
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image products-ms:latest

      - name: Login to Azure Container Registry ACR
        uses: azure/docker-login@v1
        with:
          login-server: pfaacr.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Tag Docker image
        run: |
          docker tag products-ms:latest pfaacr.azurecr.io/products-ms:latest

      - name: Push Docker image to ACR
        run: |
          docker push pfaacr.azurecr.io/products-ms:latest
  codecov:
    runs-on: ubuntu-latest
    needs: build-docker-image

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upload code coverage report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}