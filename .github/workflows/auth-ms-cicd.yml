name: auth-ms Pipeline

on:
  push:
    paths:
      - 'auth-ms/**'
      - '.github/workflows/auth-ms-cicd.yml'

jobs:
  build-test:
    runs-on: ubuntu-latest  
    steps:
      - uses: actions/checkout@v3 
        
      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.2
          
      - name: Add environment variables
        run: |
          cd auth-ms && touch .env && echo 'MONGODB_URI=${{secrets.DB_HOST}}' >> .env && echo 'JWT_SECRET=${{secrets.JWT_SECRET}}' >> .env && echo 'DB_NAME=${{secrets.DB_NAME}}' >> .env && cat .env
      
      - name: Install dependencies
        run: cd auth-ms && go mod tidy
      
      - name: Build
        run: cd auth-ms && go build -o auth-ms-build .
        
      - name: Test
        run: cd auth-ms && go test

      - name: Create build directory
        run: mkdir build && cp auth-ms/auth-ms-build auth-ms/Dockerfile build

      - name: Create build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build
  
  build-docker-image:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build image
        run: cd auth-ms && docker build -t auth-ms:latest .

      - name: Container Security Scanning
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image auth-ms:latest
        
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: pfaacr.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Tag Docker image
        run: |
          docker tag auth-ms:latest pfaacr.azurecr.io/auth-ms:latest

      - name: Push Docker image to ACR
        run: |
          docker push pfaacr.azurecr.io/auth-ms:latest 
